// Generated by jextract

package rapier.sys_dim3_f64;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$91 {

    static final FunctionDescriptor RprVHACD_decompose$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_BOOL$LAYOUT
    );
    static final MethodHandle RprVHACD_decompose$MH = RuntimeHelper.downcallHandle(
        "RprVHACD_decompose",
        constants$91.RprVHACD_decompose$FUNC
    );
    static final FunctionDescriptor RprVHACD_drop$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RprVHACD_drop$MH = RuntimeHelper.downcallHandle(
        "RprVHACD_drop",
        constants$91.RprVHACD_drop$FUNC
    );
    static final FunctionDescriptor RprWheelTuning_default$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_DOUBLE$LAYOUT.withName("suspension_stiffness"),
        Constants$root.C_DOUBLE$LAYOUT.withName("suspension_compression"),
        Constants$root.C_DOUBLE$LAYOUT.withName("suspension_damping"),
        Constants$root.C_DOUBLE$LAYOUT.withName("max_suspension_travel"),
        Constants$root.C_DOUBLE$LAYOUT.withName("friction_slip"),
        Constants$root.C_DOUBLE$LAYOUT.withName("max_suspension_force")
    ).withName("RprWheelTuning"));
    static final MethodHandle RprWheelTuning_default$MH = RuntimeHelper.downcallHandle(
        "RprWheelTuning_default",
        constants$91.RprWheelTuning_default$FUNC
    );
    static final FunctionDescriptor RprWheel_axle$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_DOUBLE$LAYOUT.withName("x"),
        Constants$root.C_DOUBLE$LAYOUT.withName("y"),
        Constants$root.C_DOUBLE$LAYOUT.withName("z")
    ).withName("RprVector"),
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RprWheel_axle$MH = RuntimeHelper.downcallHandle(
        "RprWheel_axle",
        constants$91.RprWheel_axle$FUNC
    );
    static final FunctionDescriptor RprWheel_axle_cs$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_DOUBLE$LAYOUT.withName("x"),
        Constants$root.C_DOUBLE$LAYOUT.withName("y"),
        Constants$root.C_DOUBLE$LAYOUT.withName("z")
    ).withName("RprVector"),
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RprWheel_axle_cs$MH = RuntimeHelper.downcallHandle(
        "RprWheel_axle_cs",
        constants$91.RprWheel_axle_cs$FUNC
    );
    static final FunctionDescriptor RprWheel_brake$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RprWheel_brake$MH = RuntimeHelper.downcallHandle(
        "RprWheel_brake",
        constants$91.RprWheel_brake$FUNC
    );
}


