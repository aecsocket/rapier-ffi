// Generated by jextract

package rapier.sys_dim3_f32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$92 {

    static final FunctionDescriptor RprWheel_center$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_FLOAT$LAYOUT.withName("x"),
        Constants$root.C_FLOAT$LAYOUT.withName("y"),
        Constants$root.C_FLOAT$LAYOUT.withName("z")
    ).withName("RprVector"),
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RprWheel_center$MH = RuntimeHelper.downcallHandle(
        "RprWheel_center",
        constants$92.RprWheel_center$FUNC
    );
    static final FunctionDescriptor RprWheel_chassis_connection_point_cs$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_FLOAT$LAYOUT.withName("x"),
        Constants$root.C_FLOAT$LAYOUT.withName("y"),
        Constants$root.C_FLOAT$LAYOUT.withName("z")
    ).withName("RprVector"),
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RprWheel_chassis_connection_point_cs$MH = RuntimeHelper.downcallHandle(
        "RprWheel_chassis_connection_point_cs",
        constants$92.RprWheel_chassis_connection_point_cs$FUNC
    );
    static final FunctionDescriptor RprWheel_damping_compression$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RprWheel_damping_compression$MH = RuntimeHelper.downcallHandle(
        "RprWheel_damping_compression",
        constants$92.RprWheel_damping_compression$FUNC
    );
    static final FunctionDescriptor RprWheel_damping_relaxation$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RprWheel_damping_relaxation$MH = RuntimeHelper.downcallHandle(
        "RprWheel_damping_relaxation",
        constants$92.RprWheel_damping_relaxation$FUNC
    );
    static final FunctionDescriptor RprWheel_direction_cs$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_FLOAT$LAYOUT.withName("x"),
        Constants$root.C_FLOAT$LAYOUT.withName("y"),
        Constants$root.C_FLOAT$LAYOUT.withName("z")
    ).withName("RprVector"),
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RprWheel_direction_cs$MH = RuntimeHelper.downcallHandle(
        "RprWheel_direction_cs",
        constants$92.RprWheel_direction_cs$FUNC
    );
    static final FunctionDescriptor RprWheel_engine_force$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RprWheel_engine_force$MH = RuntimeHelper.downcallHandle(
        "RprWheel_engine_force",
        constants$92.RprWheel_engine_force$FUNC
    );
}


