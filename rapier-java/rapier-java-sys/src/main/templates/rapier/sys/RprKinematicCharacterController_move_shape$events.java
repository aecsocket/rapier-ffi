// Generated by jextract

package rapier.sys;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*RprKinematicCharacterController_move_shape$events)(struct RprCharacterCollision);
 * }
 */
public interface RprKinematicCharacterController_move_shape$events {

    void apply(java.lang.foreign.MemorySegment _x0);
    static MemorySegment allocate(RprKinematicCharacterController_move_shape$events fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(RprKinematicCharacterController_move_shape$events.class, fi, constants$52.RprKinematicCharacterController_move_shape$events$FUNC, scope);
    }
    static RprKinematicCharacterController_move_shape$events ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (java.lang.foreign.MemorySegment __x0) -> {
            try {
                constants$52.RprKinematicCharacterController_move_shape$events$MH.invokeExact(symbol, __x0);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


